environment:
  github_access_token:
    secure: NB58hfge6r/BINkfthdBUVYiKPzkqjHgjdxN+qKYCt5XJhIFgvYjRQolcub9pBPh

build_script:
  - ps: |
      $DocFolder = 'AzurePowerShell'      
      $RootFolderPath = (Get-Item -Path ".\" -Verbose).FullName      
      $Extension = '.md'

      $docPath = Join-Path $RootFolderPath $DocFolder
      
      $files = Get-ChildItem -Path $docPath -Recurse | where {$_.extension -eq $Extension} | % { $_.FullName }
      
      Write-Host "Found " $files.count "Files"

      foreach($file in $files)
      {
        $found = (Get-Content $file | Out-String) -match '^(?s)\s*[-]{3}(.*?)[-]{3}\r?\n'

        if($found -and ($matches[1].contains('{{')) -or $matches[1].contains('}}'))
        {
          Write-Host 'Found a bad file $file'
          $result = $matches[1].replace('{{', '').replace('}}', '')
          $content = (Get-Content $file | Out-String).Replace($matches[1], $result)
          Set-Content $file $content
        }
      }
      Write-Host 'Finished validate files.'
  - ps: |
      $DocFolder = 'AzurePowerShell'
      $RootFolderPath = (Get-Item -Path ".\" -Verbose).FullName
      $Extension = '.md'
     
      $docPath = Join-Path $RootFolderPath $DocFolder
      $folders = Get-ChildItem $docPath | select-object name

      if($folders -eq $null -or $folders.count -lt 1)
      {
        Write-Host "No documentation folders inside the given root folder"
        exit
      }
      
      $levelOneToc = Join-Path $RootFolderPath "toc.yml"

      if(Test-Path $levelOneToc)
      {
        Remove-Item $levelOneToc
      }

      Write-Host "Level one toc $levelOneToc"

      Add-Content -Path $levelOneToc -Value "- name: AzurePowerShell"
      Add-Content -Path $levelOneToc -Value "  href: Index.md"
      Add-Content -Path $levelOneToc -Value "  items:"
      
      $levelTwoToc = Join-Path $docPath "toc.yml"

      if(Test-Path $levelTwoToc)
      {
        Remove-Item $levelTwoToc
      }

      Write-Host "Level two toc $levelTwoToc"
      Write-Host "Start writing..."

      foreach($folder in $folders)
      {
        $folderName = $folder.name
        
        Add-Content -Path $levelTwoToc -Value ("- name: " + $folderName)
        Add-Content -Path $levelTwoToc -Value ("  href: " + $folderName + "/" + $folderName + ".md")
        Add-Content -Path $levelTwoToc -Value "  items:"

        if(Test-Path (Join-Path $docPath $folderName) -PathType Container)
        {
          Add-Content -Path $levelOneToc -Value ("    - name: " + $folderName)
          Add-Content -Path $levelOneToc -Value ("      href: AzurePowerShell/" + $folderName+ "/" + $folderName + ".md")
          $files = (Get-ChildItem (Join-Path $docPath $folderName) -Recurse) | Where-Object { $_.Extension -eq $Extension }

          foreach($file in $files)
          {
            $fileName = $file.name

            if($fileName.substring(0, $fileName.LastIndexOf('.')) -ne $folderName)
            {
              Add-Content -Path $levelTwoToc -Value ("    - name: " + $fileName.substring(0, $fileName.IndexOf('.')))
              Add-Content -Path $levelTwoToc -Value ("      href: " + $folderName + "/" + $fileName)
            }
          }
        }
      }
      Write-Host "Toc was generated successfully."
on_success:
  - git clone -q --branch=%TargetBranch% %ContentRepo% %TEMP%\AzurePowerShell
  - copy %APPVEYOR_BUILD_FOLDER%\toc.yml %TEMP%\AzurePowerShell
  - if exist %TEMP%\AzurePowerShell\%DocFolder% rmdir /s /q %TEMP%\AzurePowerShell\%DocFolder%
  - robocopy %APPVEYOR_BUILD_FOLDER%\%DocFolder% %TEMP%\AzurePowerShell\%DocFolder% /e & IF %ERRORLEVEL% LEQ 1 exit 0
  - cd %TEMP%\AzurePowerShell
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:github_access_token):x-oauth-basic@github.com`n"
  - git config --global user.email %Email%
  - git config --global user.name %Name%
  - git add -A
  - git commit -m "commit from appveyor"
  - git push origin %TargetBranch%
