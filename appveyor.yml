environment:
  github_access_token:
    secure: NB58hfge6r/BINkfthdBUVYiKPzkqjHgjdxN+qKYCt5XJhIFgvYjRQolcub9pBPh

build_script:
  - ps: |
      $DocFolder = 'azureps-cmdlets-docs'      
      $RootFolderPath = (Get-Item -Path ".\" -Verbose).FullName      
      $Extension = '.md'

      $docPath = Join-Path $RootFolderPath $DocFolder
      
      $files = Get-ChildItem -Path $docPath -Recurse | where {$_.extension -eq $Extension} | % { $_.FullName }
      
      Write-Host "Found " $files.count "Files"

      foreach($file in $files)
      {
        $found = (Get-Content $file | Out-String) -match '^(?s)\s*[-]{3}(.*?)[-]{3}\r?\n'

        if($found -and ($matches[1].contains('{{')) -or $matches[1].contains('}}'))
        {
          Write-Host 'Found a bad file $file'
          $result = $matches[1].replace('{{', '').replace('}}', '')
          $content = (Get-Content $file | Out-String).Replace($matches[1], $result)
          Set-Content $file $content
        }
      }
      Write-Host 'Finished validate files.'
  - ps: |
      function DoGetToc
      {
        $DocFolder = 'azureps-cmdlets-docs'
        $RootFolderPath = (Get-Item -Path ".\" -Verbose).FullName
        $Extension = '.md'
     
        $docPath = Join-Path $RootFolderPath $DocFolder
        $folders = Get-ChildItem $docPath | select-object name
        $tocPath = Join-Path $RootFolderPath "toc.yml"
        
        if(Test-Path $tocPath)
        {
          Remove-Item $tocPath
        }
        New-Item -path $RootFolderPath -name toc.yml
        GetToc $docPath $tocPath '.md' 0
      }
      
      function global:GetToc($folderPath, $tocPath, $extension, $level)
      {
        Write-Host "constructing toc in $folderPath"
        $pre = ""
        for($i=0;$i -lt $level;$i++)
        {
          $pre = -Join($pre, "    ")
        }
        Add-Content -Path $tocPath -Value ($pre + "- name: " + (Split-Path -Path $folderPath -Leaf))
        $subFolders = Get-ChildItem $folderPath -Directory | Select-Object FullName

        if($subFolders -eq $null)
        {
          $files = (Get-ChildItem $folderPath) | Where-Object { $_.Extension -eq $Extension } | select -ExpandProperty FullName
          # finding landing page inside folders
          $landingPage = ""
          foreach($file in $files)
          {
            $found = (Get-Content $file | Out-String) -match '^(?s)\s*[-]{3}(.*?)[-]{3}\r?\n'
            if($found -and $matches[1].contains("Module Name"))
            {
              Add-Content -Path $tocPath -Value ($pre + "  href: " + (Get-Item $file | Resolve-Path -Relative))
              Write-Host "found landing page $file in $folderPath"
              $landingPage = $file
              break
            }
          }
          Add-Content -Path $tocPath -Value ($pre + "  items:")
          $pre = -Join($pre, "    ")
          foreach($file in $files)
          {
            if($file -ne $landingPage)
            {
              Add-Content -Path $tocPath -Value ($pre + "- name: " + (Split-Path -Path $file -Leaf -Resolve).split('\.')[-2])
              Add-Content -Path $tocPath -Value ($pre + "  href: " + (Get-Item $file | Resolve-Path -Relative))
            }
          }
        }
        else
        {
          Add-Content -Path $tocPath -Value ($pre + "  items:")
          foreach($subFolder in $subFolders)
          {
            GetToc $subFolder.FullName $tocPath $extension ($level+1)
          }
        }
      }
      DoGetToc
on_success:
  - git clone -q --branch=%TargetBranch% %ContentRepo% %TEMP%\AzurePowerShell
  - copy %APPVEYOR_BUILD_FOLDER%\toc.yml %TEMP%\AzurePowerShell
  - if exist %TEMP%\AzurePowerShell\%DocFolder% rmdir /s /q %TEMP%\AzurePowerShell\%DocFolder%
  - robocopy %APPVEYOR_BUILD_FOLDER%\%DocFolder% %TEMP%\AzurePowerShell\%DocFolder% /e & IF %ERRORLEVEL% LEQ 1 exit 0
  - cd %TEMP%\AzurePowerShell
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:github_access_token):x-oauth-basic@github.com`n"
  - git config --global user.email %Email%
  - git config --global user.name %Name%
  - git add -A
  - git commit -m "commit from appveyor"
  - git push origin %TargetBranch%
